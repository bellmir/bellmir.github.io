{"version":3,"file":"static/js/284.390a4a6b.chunk.js","mappings":"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","sources":["api/signupApi.js","page/Account/Signup.jsx"],"sourcesContent":["// axios\r\nimport defaultAxios from './defaultAxios'\r\n\r\nfunction signupApi(\r\n  payload, \r\n  callback=()=>{}\r\n) {\r\n  defaultAxios.post('auth/signup', payload)\r\n  .then(res=>{\r\n    callback(res);\r\n  })\r\n  .catch(error=>{\r\n    if (error.response.status==404) {\r\n      alert('회원 정보를 다시 입력해주세요')\r\n    }\r\n  })\r\n}\r\n\r\nexport default signupApi","// core\r\nimport { useState, useCallback } from 'react';\r\n// recoil\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { messageBundle } from 'store/index'\r\n// router\r\nimport { useNavigate } from 'react-router-dom'\r\n// api\r\nimport signupApi from 'api/signupApi'\r\n// style\r\nimport styled from 'styled-components'\r\n// component\r\nimport { InputBasic, InputEmail, InputPassword } from './component/InputBundle'\r\n\r\nconst PageContainer = styled.section`\r\n  .fillup{\r\n    width: 100%;\r\n    max-width: 50rem;\r\n    .c_inner>div{\r\n      margin-bottom: 2rem;\r\n      h4{\r\n        margin-bottom: 1rem;\r\n        color: var(--primary-color);\r\n        font-weight: var(--font-w-mid);\r\n      }\r\n      .error_message{\r\n        padding-top: 0.2rem;\r\n        padding-left: 0.2rem;\r\n        font-size: var(--font-size-x-small);\r\n        color: var(--danger-color);\r\n      }\r\n    }\r\n    button{\r\n      height: 4.5rem;\r\n      width: 100%;\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n`\r\n\r\nfunction Signup() {\r\n  const setAlert = useSetRecoilState(messageBundle.alert);\r\n  const navigate = useNavigate();\r\n\r\n  const [ email, setEmail ] = useState('');\r\n  const [ emailError, setEmailError ] = useState('');\r\n  const [ name, setName ] = useState('');\r\n  const [ nameError, setNameError ] = useState('');\r\n  const [ nickname, setNickname ] = useState('');\r\n  const [ nicknameError, setNicknameError ] = useState('');\r\n  const [ password, setPassword ] = useState('');\r\n  const [ passwordError, setPasswordError ] = useState('');\r\n  const [ repass, setRepass ] = useState('');\r\n  const [ repassError, setRepassError ] = useState('');\r\n\r\n  const resetError = useCallback(()=>{\r\n    setEmailError('');\r\n    setNameError('');\r\n    setNicknameError('');\r\n    setPasswordError('');\r\n    setRepassError('');\r\n  })\r\n  const resetAll = useCallback(()=>{\r\n    setEmail('');\r\n    setName('');\r\n    setNickname('');\r\n    setPassword('');\r\n    setRepass('');\r\n    resetError();\r\n  })\r\n\r\n  // 회원가입 로직\r\n  function signup(){\r\n    resetError();\r\n    if( !email || !password || !nickname || !name ){\r\n      if(!email) setEmailError('이메일을 입력해주세요');\r\n      if(!nickname) setNicknameError('닉네임을 입력해주세요');\r\n      if(!name) setNameError('이름을 입력해주세요');\r\n      if(!password) setPasswordError('비밀번호를 입력해주세요');\r\n    } else if( password != repass ){\r\n      setRepassError('비밀번호가 일치하지 않습니다');\r\n    } else{\r\n      signupApi({\r\n          email,\r\n          password,\r\n          nickname,\r\n          name,\r\n        },\r\n        ()=>{\r\n          setAlert('환영합니다.')\r\n          navigate('/login')\r\n        }\r\n      )\r\n\r\n      setAlert('샘플. 회원가입이 완료되었습니다');\r\n      resetAll();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <PageContainer className='c_main_section'>\r\n      <section className=\"c_section\">\r\n        <h2 className='c_title'>회원가입</h2>\r\n      </section>\r\n      <section className=\"c_section fillup\">\r\n        <div className=\"c_inner\">\r\n          <div className=\"email\">\r\n            <h4>이메일</h4>\r\n            <InputEmail\r\n              value={email}\r\n              onChange={(e)=> setEmail(e.currentTarget.value) }\r\n            />\r\n            { emailError && <p className='error_message'>{emailError}</p> }\r\n          </div>\r\n          <div className=\"nickname\">\r\n            <h4>닉네임</h4>\r\n            <InputBasic placeholder=\"닉네임 입력\"\r\n              value={nickname}\r\n              onChange={(e)=> setNickname(e.currentTarget.value) }\r\n            />\r\n            { nicknameError && <p className='error_message'>{nicknameError}</p> }\r\n          </div>\r\n          <div className=\"name\">\r\n            <h4>이름</h4>\r\n            <InputBasic placeholder=\"이름 입력\"\r\n              value={name}\r\n              onChange={(e)=> setName(e.currentTarget.value) }\r\n            />\r\n            { nameError && <p className='error_message'>{nameError}</p> }\r\n          </div>\r\n          <div className=\"password\">\r\n            <h4>비밀번호</h4>\r\n            <InputPassword\r\n              value={password}\r\n              onChange={(e)=>setPassword(e.currentTarget.value)}\r\n            />\r\n            { passwordError && <p className='error_message'>{passwordError}</p> }\r\n          </div>\r\n          <div className=\"repass\">\r\n            <h4>비밀번호 재입력</h4>\r\n            <InputPassword placeholder=\"비밀번호 재입력\"\r\n              value={repass}\r\n              onChange={(e)=>setRepass(e.currentTarget.value)}\r\n            />\r\n            { repassError && <p className='error_message'>{repassError}</p> }\r\n          </div>\r\n          <button className='c_btn-primary'\r\n            onClick={ signup }\r\n          >회원가입</button>\r\n        </div>\r\n      </section>\r\n    </PageContainer>\r\n  );\r\n}\r\n\r\nexport default Signup"],"names":["payload","callback","defaultAxios","then","res","catch","error","response","status","alert","PageContainer","styled","setAlert","useSetRecoilState","messageBundle","navigate","useNavigate","useState","email","setEmail","emailError","setEmailError","name","setName","nameError","setNameError","nickname","setNickname","nicknameError","setNicknameError","password","setPassword","passwordError","setPasswordError","repass","setRepass","repassError","setRepassError","resetError","useCallback","resetAll","className","value","onChange","e","currentTarget","placeholder","onClick","signupApi"],"sourceRoot":""}